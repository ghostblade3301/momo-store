include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: "0.1.${CI_PIPELINE_ID}"

stages:
  - build
  - test
  - release
  - deploy

build-backend-code-job:
  image: golang:1.23.0-alpine3.20
  stage: build
  before_script:
    - apk add curl tar
  script:
    - cd backend/cmd/api/
    - go build -o momo-backend-${VERSION}
    - tar czvf momo-backend-${VERSION}.tar.gz momo-backend${VERSION}
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-backend-${VERSION}.tar.gz ${NEXUS_BACKEND_NAME}/${VERSION}/momo-backend-${VERSION}.tar.gz

go-test-code-job:
  image: golang:1.23.0-alpine3.20
  stage: test 
  variables:
    CGO_ENABLED: 0
  dependencies:
    - build-backend-code-job
  script:
    - cd backend/cmd/api
    - go test -v ./...

sonarqube-backend-sast:
  stage: test
  dependencies:
    - build-backend-code-job
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  allow_failure: true
  script:
    - cd backend
    - >
      sonar-scanner 
      -Dsonar.projectName=${SONAR_PROJECT_KEY_BACK}
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACK}

build-backend-docker-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерируются gitlab
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA

upload-backend-release:
  only:
    changes:
      - backend/*
  needs:
    - build-backend-docker-job
    - sonarqube-backend-sast
    - go-test-code-job
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-backend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-backend:latest
